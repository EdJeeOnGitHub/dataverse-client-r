% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_file_as_dataframe.R
\name{get_dataframe_by_name}
\alias{get_dataframe_by_name}
\alias{get_dataframe_by_id}
\title{Get file from dataverse and convert it into a dataframe or tibble}
\usage{
get_dataframe_by_name(
  file,
  dataset = NULL,
  read_function = NULL,
  archival = FALSE,
  ...
)

get_dataframe_by_id(file, read_function = NULL, archival = FALSE, ...)
}
\arguments{
\item{file}{to be passed on to get_file}

\item{dataset}{to be passed on to get_file}

\item{read_function}{If supplied a function object, this will write the
raw file to a tempfile and read it back in with the supplied function. This
is useful when you want to start working with the data right away in the R
environment}

\item{archival}{Whether to read from the ingested, archival version of the
dataset, or whether to read the original. The archival versions are tab-delimited
`.tab` files. If functions to read the original version is available without
loss of information, then `archival = FALSE` is better. If such functions
are not available or the original format is unknown, use `archival = TRUE`.}

\item{...}{
  Arguments passed on to \code{\link[=get_file]{get_file}}
  \describe{
    \item{\code{format}}{A character string specifying a file format for download.
by default, this is \dQuote{original} (the original file format). If `NULL`,
no query is added, so ingested files are returned in their ingested TSV form.
For tabular datasets, the option \dQuote{bundle} downloads the bundle
of the original and archival versions, as well as the documentation.
See <https://guides.dataverse.org/en/latest/api/dataaccess.html> for details.}
    \item{\code{vars}}{A character vector specifying one or more variable names, used to
extract a subset of the data.}
    \item{\code{key}}{A character string specifying a Dataverse server API key. If one
is not specified, functions calling authenticated API endpoints will fail.
Keys can be specified atomically or globally using
\code{Sys.setenv("DATAVERSE_KEY" = "examplekey")}.}
    \item{\code{server}}{A character string specifying a Dataverse server. There are
multiple Dataverse installations, but the defaults is to use the Harvard
Dataverse (`server = "dataverse.harvard.edu"`). This can be modified atomically
or globally using \code{Sys.setenv("DATAVERSE_SERVER" = "dataverse.example.com")}.}
  }}
}
\description{
`get_dataframe_by_id`, if you know the numeric ID of the dataset, or instead
`get_dataframe_by_name` if you know the filename and doi. The dataset
}
\examples{
# load dataset from file name and dataverse DOI
gap_df <- get_dataframe_by_name(
  file = "gapminder-FiveYearData.tab",
  dataset = "doi:10.7910/DVN/GJQNEQ",
  server = "dataverse.harvard.edu",
  read_function = readr::read_csv)

# equivalently, if you know the ID
gap_df <- get_dataframe_by_id(
  3037713,
  server = "dataverse.harvard.edu",
  read_function = readr::read_csv)

# equivalently, using a dataverse object
gap_ds <- dataset_files("doi:10.7910/DVN/GJQNEQ",
                        server = "dataverse.harvard.edu")
gap_df <- get_dataframe_by_id(
  gap_ds[[2]],
  server = "dataverse.harvard.edu",
  read_function = readr::read_csv
)

# to use the ingested version (and read as TSV)
gap_df <- get_dataframe_by_id(
   3037713,
   server = "dataverse.harvard.edu",
   archival = TRUE,
   read_function = readr::read_tsv)

}
